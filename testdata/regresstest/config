#regression tests, i.e. compare gapc output with truth
DEFAULT_LDLIBS_EXTRA=$LDLIBS_EXTRA
DEFAULT_CPPFLAGS_EXTRA=$CPPFLAGS_EXTRA
DEFAULT_GAPC=$GAPC


# ======= following are test of the new CYK code generation of file src/cyk.cc =======
GRAMMAR=../../grammar2
GAPC="../../../gapc"
check_new_old_eq_twotrack alignments_cyk.gap unused maxM "GUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUG" cyk_maxM "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaUAGUCGUAGUCGUAGUCGUuguacg"

# test CYK code generation for quadratic, linear and const tables in a multitrack context
GAPC="../../../gapc --tab-all --cyk"
check_new_old_eq_twotrack alignments_cyk.gap unused count "freizeit" cyk_twotrack "zeitgeist"

# as above, but with automatic table design
GAPC="../../../gapc --cyk"
check_new_old_eq_twotrack alignments_cyk.gap unused count "freizeit" cyk_twotrack "zeitgeist"

# an example where nested for loops are empty and should be removed in the CYK function
GRAMMAR=../../grammar
check_new_old_eq_twotrack affinelocsim2.gap unused affinecnt "CUGAAACGUAGUCUGAAAAGCCCGCGUAGUCGUAGUCGUAGUCGUACGUUAGCGUUGAGUCGUAGUCGUAGUUGAGUUCGGUAGUCGUAGUCGUGUACCACACAUGUGCGUAGUCGUCAGUCGUAGUCGUACGUCGUCUAGCGUGUCGUAUGCGUACGUAGUCGAGUCUGACGAGUGCGUGGGUCUGAGUCGUCGUUAGGCCAGUCGUAGUCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUU" checkpoint11 "CGUAUGGCUGUAGCUGUCGUAGCUAUGCGUGUACGUCGUAGUGCUAGUCGUAGUCGUAGUCGUCGUGUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUCGUAUGGCUGUAGCUGUCGUAGCUAUGCGUGUACGUCGUAGUGCUAGUCGUAGUCGUAGUCGUCGUGUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUCGUAUGGCUGUAGCUGUCGUAGCUAUGCGUGUACGUCGUAGUGCUAGUCGUAGUCGUAGUCGUCGUGUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUCGUAGUCGUAGUCGUAGUCGUACGUCGUAUGCUGAGCAAAAAAUCGUAGUCCUGAGUCGUAGCAUGCGUACGACGUGUCCGUAGCGUACGUGUAGUACGUAGUCGAUCGUCUGAGUGUCGUAGUCGUAGUCCGUAGUCUGUAGUGUCGUACGUCGUGUAGUCGUAGCUGUAGUCGUAGUCGUAGUCGUUGCGUAGUCGUAGCGUACGUAGUGUAGUCGUCGUGUAGCGUACGUGU"
GRAMMAR=../../grammar2
check_new_old_eq_twotrack alignments_cyk.gap unused maxM "GUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUG" cyk_maxM "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaUAGUCGUAGUCGUAGUCGUuguacg"

# CYK single threaded with checkpointing for two track grammar
GAPC="../../../gapc --cyk --checkpoint"
GRAMMAR=../../grammar
check_checkpoint_eq affinelocsim2.gap unused affinecnt "CUGAAACGUAGUCUGAAAAGCCCGCGUAGUCGUAGUCGUAGUCGUACGUUAGCGUUGAGUCGUAGUCGUAGUUGAGUUCGGUAGUCGUAGUCGUGUACCACACAUGUGCGUAGUCGUCAGUCGUAGUCGUACGUCGUCUAGCGUGUCGUAUGCGUACGUAGUCGAGUCUGACGAGUGCGUGGGUCUGAGUCGUCGUUAGGCCAGUCGUAGUCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUU" checkpoint11 1 "CGUAUGGCUGUAGCUGUCGUAGCUAUGCGUGUACGUCGUAGUGCUAGUCGUAGUCGUAGUCGUCGUGUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUCGUAUGGCUGUAGCUGUCGUAGCUAUGCGUGUACGUCGUAGUGCUAGUCGUAGUCGUAGUCGUCGUGUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUCGUAUGGCUGUAGCUGUCGUAGCUAUGCGUGUACGUCGUAGUGCUAGUCGUAGUCGUAGUCGUCGUGUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUGAUGCUGAUCGUCGACGUGACGUCGUGUAGCUAGUCGUGUAGUCGUAGUCGUAGCGGGGCAGCGGUAUUUUGCGAUCGUAGUCGUAGUCGUAGUCGUAGUGUAGUGUCGUCCGUUCGUAGUCGUAGUCGUAGUCGUACGUCGUAUGCUGAGCAAAAAAUCGUAGUCCUGAGUCGUAGCAUGCGUACGACGUGUCCGUAGCGUACGUGUAGUACGUAGUCGAUCGUCUGAGUGUCGUAGUCGUAGUCCGUAGUCUGUAGUGUCGUACGUCGUGUAGUCGUAGCUGUAGUCGUAGUCGUAGUCGUUGCGUAGUCGUAGCGUACGUAGUGUAGUCGUCGUGUAGCGUACGUGU"
GRAMMAR=../../grammar2
check_checkpoint_eq alignments_cyk.gap unused maxM "GUCAGUGUCCGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUCGUGAUGUCGUAGCGUAGUCGUGUCCGUAGUCGUAGUCGUAGUCGUGUAGUCGUAGUCGUAGUCGUAGUCGUAGUCGUGUAGCUGUAGUCGUUGAGCUAGGCGUAGUCGUAGUCGUGUAGUCGUGUGUGUGUACGUAGUCCGUAGUCGUG" cyk_maxM 1 "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaUAGUCGUAGUCGUAGUCGUuguacg"

# single track
GAPC="../../../gapc --cyk"
GRAMMAR=../../grammar
check_new_old_eq adpf.gap unused count "uacgugacguugacguguaucgguacuacgugacguugacguguaucgguac" cyk_singletrack

# same as above, but with CYK code generation AND openMP parallelization
GAPC="../../../gapc --cyk"
CPPFLAGS_EXTRA="$DEFAULT_CPPFLAGS_EXTRA -fopenmp"
LDLIBS_EXTRA="$DEFAULT_LDLIBS_EXTRA -fopenmp"
if [ $(uname) = "Darwin" ]; then
	CPPFLAGS_EXTRA="$DEFAULT_CPPFLAGS_EXTRA -Xpreprocessor -fopenmp -lomp "
	LDLIBS_EXTRA="$DEFAULT_LDLIBS_EXTRA -Xpreprocessor -fopenmp -lomp -I\"$(brew --prefix libomp)/include\" -L\"$(brew --prefix libomp)/lib\""
fi
OMP_NUM_THREADS=2
export OMP_NUM_THREADS
check_new_old_eq adpf.gap unused count "uacgugacguugacguguaucgguacuacgugacguugacguguaucgguac" cyk_singletrack

GAPC="../../../gapc --cyk --checkpoint"
check_checkpoint_eq adpf.gap unused pf "uacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguacuacgugacguugacguguaucgguac" cyk_openmp_checkpoint 1
